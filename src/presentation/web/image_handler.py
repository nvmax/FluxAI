"""
Handlers for image generation results in the web server.
"""

import discord
import logging
import io
import time
import asyncio
from aiohttp import web

from src.presentation.discord.views.image_control_view import ImageControlView
from src.presentation.discord.views.redux_view import ReduxView

logger = logging.getLogger(__name__)

async def create_view_for_request(request_item):
    """
    Create the appropriate view based on the request item type.

    Args:
        request_item: The request item

    Returns:
        The appropriate view for the request item
    """
    # Check if it's a redux request
    if hasattr(request_item, 'is_redux') and request_item.is_redux:
        logger.info("Creating ReduxView for redux request")
        from src.presentation.discord.views.redux_view import ReduxView
        return ReduxView(user_id=int(request_item.user_id))

    # Check if it's a pulid request
    if hasattr(request_item, 'is_pulid') and request_item.is_pulid:
        logger.info("Creating PulidView for pulid request")
        from src.presentation.discord.views.pulid_view import PulidView
        return PulidView(user_id=int(request_item.user_id))

    # Default to standard image control view
    logger.info("Creating standard ImageControlView")
    from src.presentation.discord.views.image_control_view import ImageControlView
    return ImageControlView()

async def create_embed_for_image(request_item, user, is_video=False):
    """
    Create an embed for the generated image.

    Args:
        request_item: The request item
        user: The user who requested the image
        is_video: Whether the image is a video

    Returns:
        A Discord embed
    """
    # Create the embed
    embed = discord.Embed(
        title=None,
        description=request_item.prompt if hasattr(request_item, 'prompt') and request_item.prompt else None,
        color=user.color if user else discord.Color.blue()
    )

    # Set footer with user information
    embed.set_footer(text=f"Image Generated by {user.display_name}" if user else "Image Generated")

    return embed
